% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pnglm.fit.R
\name{pnglm.fit}
\alias{pnglm.fit}
\alias{pnglm.options}
\title{Penalized GLM}
\usage{
pnglm.fit(x, y, coef = NULL, offset = NULL, family = gaussian(),
  lambda = 0, K = NULL, control = list(), ...)

pnglm.options()
}
\arguments{
\item{x}{A model matrix.}

\item{y}{fault An integer vector for the number of faults detected in time intervals.
The fault detected just at the end of time interal is not counted.}

\item{coef}{A numeric vector indicating starting coefficients.}

\item{offset}{An integer. This can be used to specify an a priori known
component to be included in the linear predictor during fitting. This should
be NULL or a numeric vector of length equal to the number of cases.}

\item{family}{A description of the error distribution and link function to
be used in the model.}

\item{lambda}{A numeric value indicating the penalized parameter. When lambda = 0, coefficients are unconstraint.}

\item{K}{A matrix to detect the contraint structure. The default is an identity matrix.}

\item{control}{A list of control parameters. See Details.}

\item{...}{Other parameters.}
}
\value{
A list with components;
\item{initial}{A vector for initial parameters.}
\item{srm}{A class of NHPP. The SRM with the estiamted parameters.}
\item{llf}{A numeric value for the maximum log-likelihood function.}
\item{df}{An integer for degrees of freedom.}
\item{convergence}{A boolean meaning the alorigthm is converged or not.}
\item{iter}{An integer for the number of iterations.}
\item{aerror}{A numeric value for absolute error.}
\item{rerror}{A numeric value for relative error.}
\item{ctime}{A numeric value for computation time.}
\item{call}{The method call.}

A list of options.
}
\description{
Fit the generalized linear model under a constraint.

Generate a list of option values.
}
\details{
The control argument is a list that can supply any of the following components:
\describe{
  \item{maxiter}{An integer for the maximum number of iterations.}
  \item{reltol}{A numeric value. The algorithm stops if the relative error is
less than \emph{reltol} and the absolute error is less than \emph{abstol}.}
  \item{abstol}{A numeric value. The algorithm stops if the relative error is
less than \emph{reltol} and the absolute error is less than \emph{abstol}.}
  \item{trace}{A logical. If TRUE, the intermediate parameters are printed.}
  \item{printsteps}{An integer for print.}
}
}
